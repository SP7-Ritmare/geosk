version: '2.2'
services:

  db:
    image: geonode/postgis:11
    restart: unless-stopped
    container_name: db4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: db
        org.geonode.instance.name: geonode
    volumes:
      - dbdata:/var/lib/postgresql/data
      - dbbackups:/pg_backups
    env_file:
      - .env
      - ./scripts/docker/env/production/db.env

  dbsos:
    image: get-it/dbsos-postgis:9.5
    build: ./docker/sos-starterkit-database/starterkit-postgres/
    restart: unless-stopped
    container_name: dbsos4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: dbsos
        org.geonode.instance.name: geonode
    # ports:
    #   - 5432:5432
    volumes:
      - dbsosdata:/dbsosdata
    env_file:
      - .env
      - ./scripts/docker/env/production/dbsos.env

  sos:
    image: get-it/sos-configured:4.4.2
    build: ./docker/sos-configured/
    restart: unless-stopped
    container_name: sos4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: sos
        org.geonode.instance.name: geonode
    depends_on:
      - dbsos
    env_file:
      - .env
      - ./scripts/docker/env/production/sos.env

  geoserver:
    image: get-it/geoserver:2.15.2
    build: ./docker/geoserver/
    restart: unless-stopped
    container_name: geoserver4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: geoserver
        org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    volumes:
      - geoserver-data-dir:/geoserver_data/data
    env_file:
      - .env
      - ./scripts/docker/env/production/geoserver.env

  django:
    image: get-it/starterkit:2.10
    restart: unless-stopped
    build: .
    container_name: django4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
      org.geonode.component: django
      org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    # command: django-admin.py runserver 0.0.0.0:8000 --settings=geosk.settings
    volumes:
      - statics:/mnt/volumes/statics
      - geoserver-data-dir:/geoserver_data/data
    env_file:
      - .env
      - ./scripts/docker/env/production/django.env

  geonode:
    image: get-it/nginx:sos
    build: ./docker/sos-nginx/
    restart: on-failure
    container_name: nginx4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: nginx
        org.geonode.instance.name: geonode
    depends_on:
      - django
      - geoserver
      - sos
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-confd:/etc/nginx
      - nginx-certificates:/geonode-certificates
      - statics:/mnt/volumes/statics
    env_file:
      - .env
      - ./scripts/docker/env/production/nginx.env

  # Gets and installs letsencrypt certificates
  letsencrypt:
    image: get-it/letsencrypt:latest
    build: ./docker/letsencrypt/
    restart: on-failure
    volumes:
      - nginx-certificates:/geonode-certificates/
    env_file:
      - .env
      - ./scripts/docker/env/production/nginx.env

  data-dir-conf:
    image: geonode/geoserver_data:2.15.2
    restart: on-failure
    container_name: gsconf4${COMPOSE_PROJECT_NAME}
    labels:
        org.geonode.component: conf
        org.geonode.instance.name: geonode
    command: /bin/true
    volumes:
      - geoserver-data-dir:/geoserver_data/data

volumes:
  statics:
    name: ${COMPOSE_PROJECT_NAME}-statics
  nginx-confd:
    name: ${COMPOSE_PROJECT_NAME}-nginxconfd
  nginx-certificates:
    name: ${COMPOSE_PROJECT_NAME}-nginxcerts
  geoserver-data-dir:
    name: ${COMPOSE_PROJECT_NAME}-gsdatadir
  dbdata:
    name: ${COMPOSE_PROJECT_NAME}-dbdata
  dbsosdata:
    name: ${COMPOSE_PROJECT_NAME}-dbsosdata
  dbbackups:
    name: ${COMPOSE_PROJECT_NAME}-dbbackups
